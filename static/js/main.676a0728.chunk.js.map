{"version":3,"sources":["components/customers/EditCustomer.js","components/customers/AddCustomer.js","components/trainings/AddTraining.js","components/customers/CustomersPage.js","components/trainings/EditTraining.js","components/trainings/TrainingsPage.js","components/Calendar.js","components/Home.js","components/Header_bar.js","App.js","serviceWorker.js","index.js"],"names":["EditCustomer","props","React","useState","open","setOpen","firstname","lastname","streetaddress","postcode","city","email","phone","customer","setCustomer","handleClose","handleInputChange","event","target","name","value","IconButton","id","onClick","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","onChange","e","label","fullWidth","DialogActions","Button","color","updateCustomer","links","href","AddCustomer","saveCustomer","AddTraining","date","setDate","time","setTime","duration","activity","training","setTraining","style","moment","format","parsedDate","console","log","dateAndTime","parsed","toISOString","newTraining","saveTraining","Customers","customers","setCustomers","useEffect","fetch","then","response","json","data","content","fetchdata","method","headers","body","JSON","stringify","res","catch","err","error","link","columns","sortable","filterable","width","accessor","Cell","row","display","original","variant","size","window","confirm","Header","textAlign","maxWidth","marginTop","marginBottom","marginRight","textShadow","EditTraining","updateTraining","Trainings","trainings","setTrainings","CalendarPage","localizer","momentLocalizer","events","setEvents","eventData","i","length","Date","add","height","titleAccessor","startAccessor","endAccessor","useStyles","makeStyles","theme","root","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","Home","classes","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","Typography","className","ExpansionPanelDetails","flexGrow","menuButton","spacing","title","AppHeader","forceRefresh","AppBar","position","Toolbar","to","path","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.676a0728.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function EditCustomer(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [customer, setCustomer] = React.useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    streetaddress: \"\",\r\n    postcode: \"\",\r\n    city: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setCustomer({\r\n      firstname: props.customer.firstname,\r\n      lastname: props.customer.lastname,\r\n      streetaddress: props.customer.streetaddress,\r\n      postcode: props.customer.postcode,\r\n      city: props.customer.city,\r\n      email: props.customer.email,\r\n      phone: props.customer.phone,\r\n    });\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setCustomer({ ...customer, [event.target.name]: event.target.value });\r\n  };\r\n  const updateCustomer = () => {\r\n    props.updateCustomer(customer, props.customer.links[0].href);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton id=\"mainButtonEdit\" onClick={handleClickOpen}>\r\n        <CreateIcon />\r\n      </IconButton>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Edit Customer</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"firstname\"\r\n            value={customer.firstname}\r\n            onChange={(e) => handleInputChange(e)}\r\n            label=\"First Name\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"lastname\"\r\n            value={customer.lastname}\r\n            onChange={(e) => handleInputChange(e)}\r\n            label=\"Last Name\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"streetaddress\"\r\n            value={customer.streetaddress}\r\n            onChange={(e) => handleInputChange(e)}\r\n            label=\"Address\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"postcode\"\r\n            value={customer.postcode}\r\n            onChange={(e) => handleInputChange(e)}\r\n            label=\"Postal code\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"city\"\r\n            value={customer.city}\r\n            onChange={(e) => handleInputChange(e)}\r\n            label=\"City\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"email\"\r\n            value={customer.email}\r\n            onChange={(e) => handleInputChange(e)}\r\n            label=\"E-mail\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"phone\"\r\n            value={customer.phone}\r\n            onChange={(e) => handleInputChange(e)}\r\n            label=\"Phone\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={updateCustomer} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function AddCustomer(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [customer, setCustomer] = React.useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    streetaddress: \"\",\r\n    postcode: \"\",\r\n    city: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setCustomer({ ...customer, [event.target.name]: event.target.value });\r\n  };\r\n  const addCustomer = () => {\r\n    props.saveCustomer(customer);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleClickOpen} id=\"mainButtonAdd\">\r\n        Add New\r\n      </button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">New Customer</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"firstname\"\r\n            value={customer.firstname}\r\n            onChange={(e) => handleInputChange(e)}\r\n            label=\"First Name\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"lastname\"\r\n            value={customer.lastname}\r\n            onChange={(e) => handleInputChange(e)}\r\n            label=\"Last Name\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"streetaddress\"\r\n            value={customer.streetaddress}\r\n            onChange={(e) => handleInputChange(e)}\r\n            label=\"Address\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"postcode\"\r\n            value={customer.postcode}\r\n            onChange={(e) => handleInputChange(e)}\r\n            label=\"Postal Code\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"city\"\r\n            value={customer.city}\r\n            onChange={(e) => handleInputChange(e)}\r\n            label=\"City\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"email\"\r\n            value={customer.email}\r\n            onChange={(e) => handleInputChange(e)}\r\n            label=\"E-mail\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"phone\"\r\n            value={customer.phone}\r\n            onChange={(e) => handleInputChange(e)}\r\n            label=\"Phone\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={addCustomer} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport FitnessCenterIcon from \"@material-ui/icons/FitnessCenter\";\r\nimport moment from \"moment\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function AddTraining(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [date, setDate] = React.useState(\"\");\r\n  const [time, setTime] = React.useState(\"\");\r\n\r\n  const [training, setTraining] = React.useState({\r\n    date: \"\",\r\n    duration: \"\",\r\n    activity: \"\",\r\n    customer: props.customer,\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setTraining({ ...training, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const dateInput = (event) => {\r\n    setDate(event.target.value);\r\n  };\r\n\r\n  const timeInput = (event) => {\r\n    setTime(event.target.value);\r\n  };\r\n\r\n  const addTraining = () => {\r\n    const parsedDate = moment(date, \"DD-MM-YYYY\").format(\"YYYY-MM-DD\");\r\n    console.log(\"Date: \" + parsedDate);\r\n    const dateAndTime = parsedDate + \" \" + time;\r\n    console.log(\"dateAndTime: \" + dateAndTime);\r\n    const parsed = moment(dateAndTime, \"YYYY-MM-DD HH:mm\").toISOString();\r\n\r\n    //const säätö = parsed.split(\"Z\")[0];\r\n    //const lol = säätö + \"+0000\";\r\n    console.log(\"parsed: \" + parsed);\r\n\r\n    const newTraining = { ...training, date: parsed };\r\n\r\n    props.saveTraining(newTraining);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        style={{ margin: \"0px\" }}\r\n        onClick={handleClickOpen}\r\n        id=\"mainButtonAddTraining\"\r\n      >\r\n        <AddIcon id=\"addIcon\" />\r\n        <FitnessCenterIcon />\r\n      </button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add new training</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"activity\"\r\n            value={training.activity}\r\n            onChange={(e) => handleInputChange(e)}\r\n            label=\"Activity\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"duration\"\r\n            value={training.duration}\r\n            onChange={(e) => handleInputChange(e)}\r\n            label=\"Duration (min)\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"date\"\r\n            onChange={(e) => dateInput(e)}\r\n            label={`Date (eg. ${moment().format(\"DD.MM.YYYY\")})`}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"time\"\r\n            onChange={(e) => timeInput(e)}\r\n            label={`Time (eg. ${moment().format(\"HH:mm\")})`}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={addTraining} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactTable from \"react-table-6\";\r\nimport \"react-table-6/react-table.css\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditCustomer from \"./EditCustomer\";\r\nimport AddCustomer from \"./AddCustomer\";\r\nimport AddTraining from \"../trainings/AddTraining\";\r\n\r\nexport default function Customers() {\r\n  const [customers, setCustomers] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://customerrest.herokuapp.com/api/customers\")\r\n      .then((response) => response.json())\r\n      .then((data) => setCustomers(data.content));\r\n  }, []);\r\n\r\n  const fetchdata = () => {\r\n    fetch(\"https://customerrest.herokuapp.com/api/customers\")\r\n      .then((response) => response.json())\r\n      .then((data) => setCustomers(data.content));\r\n  };\r\n\r\n  const saveCustomer = (customer) => {\r\n    fetch(\"https://customerrest.herokuapp.com/api/customers\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(customer),\r\n    })\r\n      .then((res) => fetchdata())\r\n      .catch((err) => console.error(err));\r\n    //setSaveopen(true);\r\n  };\r\n\r\n  const saveTraining = (training) => {\r\n    fetch(\"https://customerrest.herokuapp.com/api/trainings\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(training),\r\n    })\r\n      .then((res) => fetchdata())\r\n      .catch((err) => console.error(err));\r\n    //setSaveopen(true);\r\n  };\r\n\r\n  const updateCustomer = (customer, link) => {\r\n    fetch(link, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(customer),\r\n    })\r\n      .then((res) => fetchdata())\r\n      .catch((err) => console.error(err));\r\n    //setEditopen(true);\r\n  };\r\n\r\n  const deleteCustomer = (link) => {\r\n    if (window.confirm(`Are you sure you want to delete this customer?`)) {\r\n      fetch(link, { method: \"DELETE\" })\r\n        .then((res) => fetchdata())\r\n        .catch((err) => console.error(err));\r\n      //setOpen(true);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      sortable: false,\r\n      filterable: false,\r\n      width: 75,\r\n      accessor: \"links[0].href\",\r\n      Cell: (row) => (\r\n        <div style={{ display: \"flex\" }}>\r\n          <div>\r\n            <EditCustomer\r\n              updateCustomer={updateCustomer}\r\n              customer={row.original}\r\n            />\r\n          </div>\r\n          <div>\r\n            <IconButton\r\n              id=\"mainButtonDelete\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"small\"\r\n              onClick={() => deleteCustomer(row.value)}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      filterable: false,\r\n      sortable: false,\r\n      Cell: (row) => (\r\n        <div>\r\n          <AddTraining\r\n            saveTraining={saveTraining}\r\n            customer={row.original.links[0].href}\r\n          />\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Firstname\",\r\n      accessor: \"firstname\",\r\n    },\r\n    {\r\n      Header: \"Lastname\",\r\n      accessor: \"lastname\",\r\n    },\r\n    {\r\n      Header: \"Address\",\r\n      accessor: \"streetaddress\",\r\n    },\r\n    {\r\n      Header: \"Postal Code\",\r\n      accessor: \"postcode\",\r\n    },\r\n    {\r\n      Header: \"City\",\r\n      accessor: \"city\",\r\n    },\r\n    {\r\n      Header: \"E-mail\",\r\n      accessor: \"email\",\r\n    },\r\n    {\r\n      Header: \"Phone\",\r\n      accessor: \"phone\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <div style={{ maxWidth: \"70%\", margin: \"auto\" }}>\r\n        <div style={{ textAlign: \"left\", display: \"flex\" }}>\r\n          <h1\r\n            style={{\r\n              marginTop: \"10px\",\r\n              marginBottom: \"0px\",\r\n              marginRight: \"15px\",\r\n              color: \"#3f51b5\",\r\n              textShadow: \" 2px 2px  lightgrey\",\r\n            }}\r\n          >\r\n            Customers\r\n          </h1>\r\n          <AddCustomer saveCustomer={saveCustomer} />\r\n        </div>\r\n\r\n        <ReactTable data={customers} columns={columns} filterable={true} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function EditTraining(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [training, setTraining] = React.useState({\r\n    id: 0,\r\n    date: \"\",\r\n    duration: \"\",\r\n    activity: \"\",\r\n    customer: {},\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setTraining({\r\n      id: props.training.id,\r\n      date: props.training.date,\r\n      duration: props.training.duration,\r\n      activity: props.training.activity,\r\n      customer: props.training.customer,\r\n    });\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setTraining({ ...training, [event.target.name]: event.target.value });\r\n  };\r\n  const updateTraining = () => {\r\n    props.updateTraining(\r\n      training,\r\n      `https://customerrest.herokuapp.com/api/trainings/${training.id}`\r\n    );\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        id=\"mainButtonEdit\"\r\n        size=\"small\"\r\n        color=\"primary\"\r\n        onClick={handleClickOpen}\r\n      >\r\n        <CreateIcon />\r\n      </IconButton>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Edit Training</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"activity\"\r\n            value={training.activity}\r\n            onChange={(e) => handleInputChange(e)}\r\n            label=\"Activity\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"duration\"\r\n            value={training.duration}\r\n            onChange={(e) => handleInputChange(e)}\r\n            label=\"Duration (min)\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"date\"\r\n            value={training.date}\r\n            onChange={(e) => handleInputChange(e)}\r\n            label=\"Date\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={updateTraining} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactTable from \"react-table-6\";\r\nimport \"react-table-6/react-table.css\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditTraining from \"./EditTraining\";\r\nimport moment from \"moment\";\r\n\r\nexport default function Trainings() {\r\n  const [trainings, setTrainings] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://customerrest.herokuapp.com/gettrainings\")\r\n      .then((response) => response.json())\r\n      .then((data) => setTrainings(data))\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  const fetchdata = () => {\r\n    fetch(\"https://customerrest.herokuapp.com/gettrainings\")\r\n      .then((response) => response.json())\r\n      .then((data) => setTrainings(data))\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  const updateTraining = (training, link) => {\r\n    fetch(link, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(training),\r\n    })\r\n      .then((res) => fetchdata())\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  const deleteTraining = (link) => {\r\n    if (window.confirm(`Are you sure you want to delete this training?`)) {\r\n      fetch(link, { method: \"DELETE\" })\r\n        .then((res) => fetchdata())\r\n        .catch((err) => console.error(err));\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      sortable: false,\r\n      filterable: false,\r\n      width: 75,\r\n      //accessor: \"\",\r\n      Cell: (row) => (\r\n        <div style={{ display: \"flex\" }}>\r\n          <div>\r\n            <EditTraining\r\n              updateTraining={updateTraining}\r\n              training={row.original}\r\n            />\r\n          </div>\r\n          <div>\r\n            <IconButton\r\n              id=\"mainButtonDelete\"\r\n              onClick={() => {\r\n                deleteTraining(\r\n                  `https://customerrest.herokuapp.com/api/trainings/${row.original.id}`\r\n                );\r\n              }}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Activity\",\r\n      accessor: \"activity\",\r\n    },\r\n    {\r\n      Header: \"Duration (min)\",\r\n      accessor: \"duration\",\r\n    },\r\n    {\r\n      Header: \"Date\",\r\n      accessor: \"date\",\r\n      Cell: (row) => (\r\n        <div>\r\n          {moment(row.original.date).format(\"DD.MM.YYYY\")}{\" \"}\r\n          <i>{moment(row.original.date).format(\"(HH:mm)\")}</i>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Customer\",\r\n      accessor: \"customer\",\r\n      Cell: (row) => (\r\n        <div>\r\n          {row.original.customer.firstname} {row.original.customer.lastname}\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <div style={{ maxWidth: \"70%\", margin: \"auto\" }}>\r\n        <h1\r\n          style={{\r\n            textAlign: \"left\",\r\n            marginTop: \"10px\",\r\n            marginBottom: \"10px\",\r\n            color: \"#3f51b5\",\r\n            textShadow: \" 2px 2px  lightgrey\",\r\n          }}\r\n        >\r\n          Trainings\r\n        </h1>\r\n        <ReactTable data={trainings} columns={columns} filterable={true} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\n\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\nexport default function CalendarPage() {\r\n  const localizer = momentLocalizer(moment);\r\n\r\n  const [events, setEvents] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    fetch(`https://customerrest.herokuapp.com/gettrainings`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let eventData = data;\r\n        //console.log(eventData);\r\n\r\n        for (let i = 0; i < eventData.length; i++) {\r\n          eventData[i].date = new Date(eventData[i].date);\r\n          eventData[i].duration = new Date(\r\n            moment(eventData[i].date)\r\n              .add(eventData[i].duration, \"minutes\")\r\n              .format()\r\n          );\r\n          eventData[\r\n            i\r\n          ].customer = `${eventData[i].customer.firstname}  ${eventData[i].customer.lastname}`;\r\n          eventData[\r\n            i\r\n          ].activity = `${eventData[i].customer} | ${eventData[i].activity}`;\r\n\r\n          console.log(eventData[i]);\r\n        }\r\n        setEvents(eventData);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"70%\", margin: \"auto\" }}>\r\n      <h1\r\n        style={{\r\n          textAlign: \"left\",\r\n          marginTop: \"10px\",\r\n          marginBottom: \"10px\",\r\n          color: \"#3f51b5\",\r\n          textShadow: \" 2px 2px  lightgrey\",\r\n        }}\r\n      >\r\n        Calendar\r\n      </h1>\r\n\r\n      <Calendar\r\n        localizer={localizer}\r\n        style={{ height: \"700px\" }}\r\n        events={events}\r\n        titleAccessor=\"activity\"\r\n        startAccessor=\"date\"\r\n        endAccessor=\"duration\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular\r\n  }\r\n}));\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div style={{ maxWidth: \"70%\", margin: \"auto\", marginTop: \"20px\" }}>\r\n      <h1\r\n        style={{\r\n          textAlign: \"left\",\r\n          marginTop: \"10px\",\r\n          marginBottom: \"0px\",\r\n          marginRight: \"15px\",\r\n          color: \"#3f51b5\",\r\n          textShadow: \" 2px 2px  lightgrey\"\r\n        }}\r\n      >\r\n        Home\r\n      </h1>\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel2a-content\"\r\n          id=\"panel2a-header\"\r\n        >\r\n          <Typography className={classes.heading}>\r\n            About the web application\r\n          </Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Typography>\r\n            Task Case: <br />\r\n            <p></p>\r\n            Personal Trainer company needs front end app for their customer\r\n            database. Database contains info about customers and their\r\n            trainings. They have REST API and documentation that contains all\r\n            information needed for front end development. Your task is to\r\n            implement front end for them using either React.js or Vue.js.\r\n            <br />\r\n            ---------------------------------------------------------------\r\n            <br />\r\n            This web application contains a navigation menu leading to four\r\n            different endpoints. One for the home page, second for the Customer\r\n            -page, third for the Trainings -page, and fourth for the Calendar\r\n            -page.\r\n            <br />\r\n            <br />\r\n            The task turned out to be quite a challenge, but it was fun\r\n            nonetheless. I also learned a lot from it and feel much more\r\n            confident in React after completing it.\r\n            <br />\r\n            <br />\r\n            The code is far from perfect, but it still works. (it has a few RED\r\n            warnings, repetition in terms of code, and the css code is all over\r\n            the place.)\r\n            <br />\r\n            Hope you enjoy!\r\n            <br />\r\n            <br />\r\n            -Teemu Kosonen\r\n          </Typography>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport FitnessCenterIcon from \"@material-ui/icons/FitnessCenter\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport Customers from \"./customers/CustomersPage\";\r\nimport Trainings from \"./trainings/TrainingsPage\";\r\nimport CalendarIcon from \"@material-ui/icons/DateRangeRounded\";\r\nimport Calendar from \"./Calendar\";\r\nimport Home from \"./Home\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    color: \"black\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function AppHeader(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Router forceRefresh={true}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <h1 style={{ textShadow: \"3px 3px #2a3882\" }}>Fake</h1>\r\n            <h1 style={{ color: \"#a6b3f7\", textShadow: \"3px 3px #2a3882\" }}>\r\n              Fitness\r\n            </h1>\r\n            <Typography variant=\"h6\" className={classes.title}></Typography>\r\n\r\n            <Link to=\"/final-task\">\r\n              <button id=\"mainButton\">\r\n                <HomeIcon />\r\n              </button>\r\n            </Link>\r\n\r\n            <Link to=\"/final-task/customers\">\r\n              <button id=\"mainButton\">\r\n                <GroupIcon />\r\n              </button>\r\n            </Link>\r\n\r\n            <Link to=\"/final-task/trainings\">\r\n              <button id=\"mainButton\">\r\n                <FitnessCenterIcon />\r\n              </button>\r\n            </Link>\r\n\r\n            <Link to=\"/final-task/calendar\">\r\n              <button id=\"mainButton\">\r\n                <CalendarIcon />\r\n              </button>\r\n            </Link>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Switch>\r\n          <Route path=\"/final-task/customers\">\r\n            <Customers />\r\n          </Route>\r\n          <Route path=\"/final-task/trainings\">\r\n            <Trainings />\r\n          </Route>\r\n          <Route path=\"/final-task/calendar\">\r\n            <Calendar />\r\n          </Route>\r\n          <Route path=\"/final-task\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport AppHeader from \"./components/Header_bar\";\r\nimport \"./App.css\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <AppHeader />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}